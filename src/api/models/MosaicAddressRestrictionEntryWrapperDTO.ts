/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MosaicAddressRestrictionEntryDTO } from './MosaicAddressRestrictionEntryDTO';
import {
    MosaicAddressRestrictionEntryDTOFromJSON,
    MosaicAddressRestrictionEntryDTOFromJSONTyped,
    MosaicAddressRestrictionEntryDTOToJSON,
    MosaicAddressRestrictionEntryDTOToJSONTyped,
} from './MosaicAddressRestrictionEntryDTO';
import type { MosaicRestrictionEntryTypeEnum } from './MosaicRestrictionEntryTypeEnum';
import {
    MosaicRestrictionEntryTypeEnumFromJSON,
    MosaicRestrictionEntryTypeEnumFromJSONTyped,
    MosaicRestrictionEntryTypeEnumToJSON,
    MosaicRestrictionEntryTypeEnumToJSONTyped,
} from './MosaicRestrictionEntryTypeEnum';

/**
 * 
 * @export
 * @interface MosaicAddressRestrictionEntryWrapperDTO
 */
export interface MosaicAddressRestrictionEntryWrapperDTO {
    /**
     * The version of the state
     * @type {number}
     * @memberof MosaicAddressRestrictionEntryWrapperDTO
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof MosaicAddressRestrictionEntryWrapperDTO
     */
    compositeHash: string;
    /**
     * 
     * @type {MosaicRestrictionEntryTypeEnum}
     * @memberof MosaicAddressRestrictionEntryWrapperDTO
     */
    entryType: MosaicRestrictionEntryTypeEnum;
    /**
     * Mosaic identifier.
     * @type {string}
     * @memberof MosaicAddressRestrictionEntryWrapperDTO
     */
    mosaicId: string;
    /**
     * Address encoded using a 32-character set.
     * @type {string}
     * @memberof MosaicAddressRestrictionEntryWrapperDTO
     */
    targetAddress: string;
    /**
     * 
     * @type {Array<MosaicAddressRestrictionEntryDTO>}
     * @memberof MosaicAddressRestrictionEntryWrapperDTO
     */
    restrictions: Array<MosaicAddressRestrictionEntryDTO>;
}



/**
 * Check if a given object implements the MosaicAddressRestrictionEntryWrapperDTO interface.
 */
export function instanceOfMosaicAddressRestrictionEntryWrapperDTO(value: Record<string, any>): value is MosaicAddressRestrictionEntryWrapperDTO {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('compositeHash' in value) || value['compositeHash'] === undefined) return false;
    if (!('entryType' in value) || value['entryType'] === undefined) return false;
    if (!('mosaicId' in value) || value['mosaicId'] === undefined) return false;
    if (!('targetAddress' in value) || value['targetAddress'] === undefined) return false;
    if (!('restrictions' in value) || value['restrictions'] === undefined) return false;
    return true;
}

export function MosaicAddressRestrictionEntryWrapperDTOFromJSON(json: any): MosaicAddressRestrictionEntryWrapperDTO {
    return MosaicAddressRestrictionEntryWrapperDTOFromJSONTyped(json, false);
}

export function MosaicAddressRestrictionEntryWrapperDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MosaicAddressRestrictionEntryWrapperDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'compositeHash': json['compositeHash'],
        'entryType': MosaicRestrictionEntryTypeEnumFromJSON(json['entryType']),
        'mosaicId': json['mosaicId'],
        'targetAddress': json['targetAddress'],
        'restrictions': ((json['restrictions'] as Array<any>).map(MosaicAddressRestrictionEntryDTOFromJSON)),
    };
}

export function MosaicAddressRestrictionEntryWrapperDTOToJSON(json: any): MosaicAddressRestrictionEntryWrapperDTO {
    return MosaicAddressRestrictionEntryWrapperDTOToJSONTyped(json, false);
}

export function MosaicAddressRestrictionEntryWrapperDTOToJSONTyped(value?: MosaicAddressRestrictionEntryWrapperDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'compositeHash': value['compositeHash'],
        'entryType': MosaicRestrictionEntryTypeEnumToJSON(value['entryType']),
        'mosaicId': value['mosaicId'],
        'targetAddress': value['targetAddress'],
        'restrictions': ((value['restrictions'] as Array<any>).map(MosaicAddressRestrictionEntryDTOToJSON)),
    };
}

