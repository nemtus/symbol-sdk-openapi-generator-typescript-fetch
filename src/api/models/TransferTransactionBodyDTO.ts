/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UnresolvedMosaic,
    UnresolvedMosaicFromJSON,
    UnresolvedMosaicFromJSONTyped,
    UnresolvedMosaicToJSON,
} from './UnresolvedMosaic';

/**
 * 
 * @export
 * @interface TransferTransactionBodyDTO
 */
export interface TransferTransactionBodyDTO {
    /**
     * Address expressed in Base32 format. If the bit 0 of byte 0 is not set (like in 0x90), then it is a
     * regular address. Example: TAOXUJOTTW3W5XTBQMQEX3SQNA6MCUVGXLXR3TA. 
     * Otherwise (e.g. 0x91) it represents a namespace id which starts at byte 1. Example: THBIMC3THGH5RUYAAAAAAAAAAAAAAAAAAAAAAAA
     * @type {string}
     * @memberof TransferTransactionBodyDTO
     */
    recipientAddress: string;
    /**
     * Array of mosaics sent to the recipient.
     * @type {Array<UnresolvedMosaic>}
     * @memberof TransferTransactionBodyDTO
     */
    mosaics: Array<UnresolvedMosaic>;
    /**
     * Transfer transaction message
     * @type {string}
     * @memberof TransferTransactionBodyDTO
     */
    message?: string;
}

export function TransferTransactionBodyDTOFromJSON(json: any): TransferTransactionBodyDTO {
    return TransferTransactionBodyDTOFromJSONTyped(json, false);
}

export function TransferTransactionBodyDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferTransactionBodyDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recipientAddress': json['recipientAddress'],
        'mosaics': ((json['mosaics'] as Array<any>).map(UnresolvedMosaicFromJSON)),
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function TransferTransactionBodyDTOToJSON(value?: TransferTransactionBodyDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'recipientAddress': value.recipientAddress,
        'mosaics': ((value.mosaics as Array<any>).map(UnresolvedMosaicToJSON)),
        'message': value.message,
    };
}

