/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MetadataEntryDTOTargetId,
    MetadataEntryDTOTargetIdFromJSON,
    MetadataEntryDTOTargetIdFromJSONTyped,
    MetadataEntryDTOTargetIdToJSON,
} from './MetadataEntryDTOTargetId';
import {
    MetadataTypeEnum,
    MetadataTypeEnumFromJSON,
    MetadataTypeEnumFromJSONTyped,
    MetadataTypeEnumToJSON,
} from './MetadataTypeEnum';

/**
 * 
 * @export
 * @interface MetadataEntryDTO
 */
export interface MetadataEntryDTO {
    /**
     * The version of the state
     * @type {number}
     * @memberof MetadataEntryDTO
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof MetadataEntryDTO
     */
    compositeHash: string;
    /**
     * Address encoded using a 32-character set.
     * @type {string}
     * @memberof MetadataEntryDTO
     */
    sourceAddress: string;
    /**
     * Address encoded using a 32-character set.
     * @type {string}
     * @memberof MetadataEntryDTO
     */
    targetAddress: string;
    /**
     * Metadata key scoped to source, target and type expressed.
     * @type {string}
     * @memberof MetadataEntryDTO
     */
    scopedMetadataKey: string;
    /**
     * 
     * @type {MetadataEntryDTOTargetId}
     * @memberof MetadataEntryDTO
     */
    targetId?: MetadataEntryDTOTargetId;
    /**
     * 
     * @type {MetadataTypeEnum}
     * @memberof MetadataEntryDTO
     */
    metadataType: MetadataTypeEnum;
    /**
     * Metadata value.
     * @type {string}
     * @memberof MetadataEntryDTO
     */
    value: string;
}

export function MetadataEntryDTOFromJSON(json: any): MetadataEntryDTO {
    return MetadataEntryDTOFromJSONTyped(json, false);
}

export function MetadataEntryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetadataEntryDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'compositeHash': json['compositeHash'],
        'sourceAddress': json['sourceAddress'],
        'targetAddress': json['targetAddress'],
        'scopedMetadataKey': json['scopedMetadataKey'],
        'targetId': !exists(json, 'targetId') ? undefined : MetadataEntryDTOTargetIdFromJSON(json['targetId']),
        'metadataType': MetadataTypeEnumFromJSON(json['metadataType']),
        'value': json['value'],
    };
}

export function MetadataEntryDTOToJSON(value?: MetadataEntryDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'compositeHash': value.compositeHash,
        'sourceAddress': value.sourceAddress,
        'targetAddress': value.targetAddress,
        'scopedMetadataKey': value.scopedMetadataKey,
        'targetId': MetadataEntryDTOTargetIdToJSON(value.targetId),
        'metadataType': MetadataTypeEnumToJSON(value.metadataType),
        'value': value.value,
    };
}

