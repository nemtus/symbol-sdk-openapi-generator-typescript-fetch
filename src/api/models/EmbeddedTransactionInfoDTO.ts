/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedTransactionInfoDTOTransaction,
    EmbeddedTransactionInfoDTOTransactionFromJSON,
    EmbeddedTransactionInfoDTOTransactionFromJSONTyped,
    EmbeddedTransactionInfoDTOTransactionToJSON,
} from './EmbeddedTransactionInfoDTOTransaction';
import {
    EmbeddedTransactionMetaDTO,
    EmbeddedTransactionMetaDTOFromJSON,
    EmbeddedTransactionMetaDTOFromJSONTyped,
    EmbeddedTransactionMetaDTOToJSON,
} from './EmbeddedTransactionMetaDTO';

/**
 * 
 * @export
 * @interface EmbeddedTransactionInfoDTO
 */
export interface EmbeddedTransactionInfoDTO {
    /**
     * Internal resource identifier.
     * @type {string}
     * @memberof EmbeddedTransactionInfoDTO
     */
    id: string;
    /**
     * 
     * @type {EmbeddedTransactionMetaDTO}
     * @memberof EmbeddedTransactionInfoDTO
     */
    meta: EmbeddedTransactionMetaDTO;
    /**
     * 
     * @type {EmbeddedTransactionInfoDTOTransaction}
     * @memberof EmbeddedTransactionInfoDTO
     */
    transaction: EmbeddedTransactionInfoDTOTransaction;
}

export function EmbeddedTransactionInfoDTOFromJSON(json: any): EmbeddedTransactionInfoDTO {
    return EmbeddedTransactionInfoDTOFromJSONTyped(json, false);
}

export function EmbeddedTransactionInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedTransactionInfoDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'meta': EmbeddedTransactionMetaDTOFromJSON(json['meta']),
        'transaction': EmbeddedTransactionInfoDTOTransactionFromJSON(json['transaction']),
    };
}

export function EmbeddedTransactionInfoDTOToJSON(value?: EmbeddedTransactionInfoDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'meta': EmbeddedTransactionMetaDTOToJSON(value.meta),
        'transaction': EmbeddedTransactionInfoDTOTransactionToJSON(value.transaction),
    };
}

