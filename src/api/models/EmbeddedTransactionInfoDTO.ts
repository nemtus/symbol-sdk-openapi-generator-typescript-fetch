/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedTransactionInfoDTOTransaction } from './EmbeddedTransactionInfoDTOTransaction';
import {
    EmbeddedTransactionInfoDTOTransactionFromJSON,
    EmbeddedTransactionInfoDTOTransactionFromJSONTyped,
    EmbeddedTransactionInfoDTOTransactionToJSON,
    EmbeddedTransactionInfoDTOTransactionToJSONTyped,
} from './EmbeddedTransactionInfoDTOTransaction';
import type { EmbeddedTransactionMetaDTO } from './EmbeddedTransactionMetaDTO';
import {
    EmbeddedTransactionMetaDTOFromJSON,
    EmbeddedTransactionMetaDTOFromJSONTyped,
    EmbeddedTransactionMetaDTOToJSON,
    EmbeddedTransactionMetaDTOToJSONTyped,
} from './EmbeddedTransactionMetaDTO';

/**
 * 
 * @export
 * @interface EmbeddedTransactionInfoDTO
 */
export interface EmbeddedTransactionInfoDTO {
    /**
     * Internal resource identifier.
     * @type {string}
     * @memberof EmbeddedTransactionInfoDTO
     */
    id: string;
    /**
     * 
     * @type {EmbeddedTransactionMetaDTO}
     * @memberof EmbeddedTransactionInfoDTO
     */
    meta: EmbeddedTransactionMetaDTO;
    /**
     * 
     * @type {EmbeddedTransactionInfoDTOTransaction}
     * @memberof EmbeddedTransactionInfoDTO
     */
    transaction: EmbeddedTransactionInfoDTOTransaction;
}

/**
 * Check if a given object implements the EmbeddedTransactionInfoDTO interface.
 */
export function instanceOfEmbeddedTransactionInfoDTO(value: Record<string, any>): value is EmbeddedTransactionInfoDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('transaction' in value) || value['transaction'] === undefined) return false;
    return true;
}

export function EmbeddedTransactionInfoDTOFromJSON(json: any): EmbeddedTransactionInfoDTO {
    return EmbeddedTransactionInfoDTOFromJSONTyped(json, false);
}

export function EmbeddedTransactionInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedTransactionInfoDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'meta': EmbeddedTransactionMetaDTOFromJSON(json['meta']),
        'transaction': EmbeddedTransactionInfoDTOTransactionFromJSON(json['transaction']),
    };
}

export function EmbeddedTransactionInfoDTOToJSON(json: any): EmbeddedTransactionInfoDTO {
    return EmbeddedTransactionInfoDTOToJSONTyped(json, false);
}

export function EmbeddedTransactionInfoDTOToJSONTyped(value?: EmbeddedTransactionInfoDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'meta': EmbeddedTransactionMetaDTOToJSON(value['meta']),
        'transaction': EmbeddedTransactionInfoDTOTransactionToJSON(value['transaction']),
    };
}

