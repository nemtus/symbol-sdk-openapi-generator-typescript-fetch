/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LockStatus } from './LockStatus';
import {
    LockStatusFromJSON,
    LockStatusFromJSONTyped,
    LockStatusToJSON,
    LockStatusToJSONTyped,
} from './LockStatus';

/**
 * 
 * @export
 * @interface HashLockEntryDTO
 */
export interface HashLockEntryDTO {
    /**
     * The version of the state
     * @type {number}
     * @memberof HashLockEntryDTO
     */
    version: number;
    /**
     * Address encoded using a 32-character set.
     * @type {string}
     * @memberof HashLockEntryDTO
     */
    ownerAddress: string;
    /**
     * Mosaic identifier.
     * @type {string}
     * @memberof HashLockEntryDTO
     */
    mosaicId: string;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof HashLockEntryDTO
     */
    amount: string;
    /**
     * Height of the blockchain.
     * @type {string}
     * @memberof HashLockEntryDTO
     */
    endHeight: string;
    /**
     * 
     * @type {LockStatus}
     * @memberof HashLockEntryDTO
     */
    status: LockStatus;
    /**
     * 
     * @type {string}
     * @memberof HashLockEntryDTO
     */
    hash: string;
}



/**
 * Check if a given object implements the HashLockEntryDTO interface.
 */
export function instanceOfHashLockEntryDTO(value: Record<string, any>): value is HashLockEntryDTO {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('ownerAddress' in value) || value['ownerAddress'] === undefined) return false;
    if (!('mosaicId' in value) || value['mosaicId'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('endHeight' in value) || value['endHeight'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('hash' in value) || value['hash'] === undefined) return false;
    return true;
}

export function HashLockEntryDTOFromJSON(json: any): HashLockEntryDTO {
    return HashLockEntryDTOFromJSONTyped(json, false);
}

export function HashLockEntryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): HashLockEntryDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'ownerAddress': json['ownerAddress'],
        'mosaicId': json['mosaicId'],
        'amount': json['amount'],
        'endHeight': json['endHeight'],
        'status': LockStatusFromJSON(json['status']),
        'hash': json['hash'],
    };
}

export function HashLockEntryDTOToJSON(json: any): HashLockEntryDTO {
    return HashLockEntryDTOToJSONTyped(json, false);
}

export function HashLockEntryDTOToJSONTyped(value?: HashLockEntryDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'ownerAddress': value['ownerAddress'],
        'mosaicId': value['mosaicId'],
        'amount': value['amount'],
        'endHeight': value['endHeight'],
        'status': LockStatusToJSON(value['status']),
        'hash': value['hash'],
    };
}

