/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RentalFeesDTO
 */
export interface RentalFeesDTO {
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof RentalFeesDTO
     */
    effectiveRootNamespaceRentalFeePerBlock: string;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof RentalFeesDTO
     */
    effectiveChildNamespaceRentalFee: string;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof RentalFeesDTO
     */
    effectiveMosaicRentalFee: string;
}

/**
 * Check if a given object implements the RentalFeesDTO interface.
 */
export function instanceOfRentalFeesDTO(value: Record<string, any>): value is RentalFeesDTO {
    if (!('effectiveRootNamespaceRentalFeePerBlock' in value) || value['effectiveRootNamespaceRentalFeePerBlock'] === undefined) return false;
    if (!('effectiveChildNamespaceRentalFee' in value) || value['effectiveChildNamespaceRentalFee'] === undefined) return false;
    if (!('effectiveMosaicRentalFee' in value) || value['effectiveMosaicRentalFee'] === undefined) return false;
    return true;
}

export function RentalFeesDTOFromJSON(json: any): RentalFeesDTO {
    return RentalFeesDTOFromJSONTyped(json, false);
}

export function RentalFeesDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RentalFeesDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'effectiveRootNamespaceRentalFeePerBlock': json['effectiveRootNamespaceRentalFeePerBlock'],
        'effectiveChildNamespaceRentalFee': json['effectiveChildNamespaceRentalFee'],
        'effectiveMosaicRentalFee': json['effectiveMosaicRentalFee'],
    };
}

export function RentalFeesDTOToJSON(json: any): RentalFeesDTO {
    return RentalFeesDTOToJSONTyped(json, false);
}

export function RentalFeesDTOToJSONTyped(value?: RentalFeesDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'effectiveRootNamespaceRentalFeePerBlock': value['effectiveRootNamespaceRentalFeePerBlock'],
        'effectiveChildNamespaceRentalFee': value['effectiveChildNamespaceRentalFee'],
        'effectiveMosaicRentalFee': value['effectiveMosaicRentalFee'],
    };
}

