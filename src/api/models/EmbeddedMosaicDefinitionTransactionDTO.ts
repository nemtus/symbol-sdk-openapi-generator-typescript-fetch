/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedTransactionDTO,
    EmbeddedTransactionDTOFromJSON,
    EmbeddedTransactionDTOFromJSONTyped,
    EmbeddedTransactionDTOToJSON,
} from './EmbeddedTransactionDTO';
import {
    MosaicDefinitionTransactionBodyDTO,
    MosaicDefinitionTransactionBodyDTOFromJSON,
    MosaicDefinitionTransactionBodyDTOFromJSONTyped,
    MosaicDefinitionTransactionBodyDTOToJSON,
} from './MosaicDefinitionTransactionBodyDTO';
import {
    NetworkTypeEnum,
    NetworkTypeEnumFromJSON,
    NetworkTypeEnumFromJSONTyped,
    NetworkTypeEnumToJSON,
} from './NetworkTypeEnum';

/**
 * 
 * @export
 * @interface EmbeddedMosaicDefinitionTransactionDTO
 */
export interface EmbeddedMosaicDefinitionTransactionDTO {
    /**
     * Public key.
     * @type {string}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    signerPublicKey: string;
    /**
     * Entity version.
     * @type {number}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    version: number;
    /**
     * 
     * @type {NetworkTypeEnum}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    network: NetworkTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    type: number;
    /**
     * Mosaic identifier.
     * @type {string}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    id: string;
    /**
     * Duration expressed in number of blocks.
     * @type {string}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    duration: string;
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    nonce: number;
    /**
     * - 0x00 (none) - No flags present.
     * - 0x01 (supplyMutable) - Mosaic supports supply changes even when mosaic owner owns partial supply.
     * - 0x02 (transferable) - Mosaic supports transfers between arbitrary accounts. When not set, mosaic can only be transferred to and from mosaic owner.
     * - 0x04 (restrictable) - Mosaic supports custom restrictions configured by mosaic owner.
     * - 0x08 (revokable) - Mosaic allows creator to revoke balances from another user.
     * @type {number}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    flags: number;
    /**
     * Determines up to what decimal place the mosaic can be divided.
     * Divisibility of 3 means that a mosaic can be divided into smallest parts of 0.001 mosaics.
     * The divisibility must be in the range of 0 and 6.
     * @type {number}
     * @memberof EmbeddedMosaicDefinitionTransactionDTO
     */
    divisibility: number;
}

export function EmbeddedMosaicDefinitionTransactionDTOFromJSON(json: any): EmbeddedMosaicDefinitionTransactionDTO {
    return EmbeddedMosaicDefinitionTransactionDTOFromJSONTyped(json, false);
}

export function EmbeddedMosaicDefinitionTransactionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedMosaicDefinitionTransactionDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'signerPublicKey': json['signerPublicKey'],
        'version': json['version'],
        'network': NetworkTypeEnumFromJSON(json['network']),
        'type': json['type'],
        'id': json['id'],
        'duration': json['duration'],
        'nonce': json['nonce'],
        'flags': json['flags'],
        'divisibility': json['divisibility'],
    };
}

export function EmbeddedMosaicDefinitionTransactionDTOToJSON(value?: EmbeddedMosaicDefinitionTransactionDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'signerPublicKey': value.signerPublicKey,
        'version': value.version,
        'network': NetworkTypeEnumToJSON(value.network),
        'type': value.type,
        'id': value.id,
        'duration': value.duration,
        'nonce': value.nonce,
        'flags': value.flags,
        'divisibility': value.divisibility,
    };
}

