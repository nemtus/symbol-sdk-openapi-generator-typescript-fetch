/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MultisigNetworkPropertiesDTO
 */
export interface MultisigNetworkPropertiesDTO {
    /**
     * Maximum number of multisig levels.
     * @type {string}
     * @memberof MultisigNetworkPropertiesDTO
     */
    maxMultisigDepth?: string;
    /**
     * Maximum number of cosignatories per account.
     * @type {string}
     * @memberof MultisigNetworkPropertiesDTO
     */
    maxCosignatoriesPerAccount?: string;
    /**
     * Maximum number of accounts a single account can cosign.
     * @type {string}
     * @memberof MultisigNetworkPropertiesDTO
     */
    maxCosignedAccountsPerAccount?: string;
}

/**
 * Check if a given object implements the MultisigNetworkPropertiesDTO interface.
 */
export function instanceOfMultisigNetworkPropertiesDTO(value: Record<string, any>): value is MultisigNetworkPropertiesDTO {
    return true;
}

export function MultisigNetworkPropertiesDTOFromJSON(json: any): MultisigNetworkPropertiesDTO {
    return MultisigNetworkPropertiesDTOFromJSONTyped(json, false);
}

export function MultisigNetworkPropertiesDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultisigNetworkPropertiesDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'maxMultisigDepth': json['maxMultisigDepth'] == null ? undefined : json['maxMultisigDepth'],
        'maxCosignatoriesPerAccount': json['maxCosignatoriesPerAccount'] == null ? undefined : json['maxCosignatoriesPerAccount'],
        'maxCosignedAccountsPerAccount': json['maxCosignedAccountsPerAccount'] == null ? undefined : json['maxCosignedAccountsPerAccount'],
    };
}

export function MultisigNetworkPropertiesDTOToJSON(json: any): MultisigNetworkPropertiesDTO {
    return MultisigNetworkPropertiesDTOToJSONTyped(json, false);
}

export function MultisigNetworkPropertiesDTOToJSONTyped(value?: MultisigNetworkPropertiesDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'maxMultisigDepth': value['maxMultisigDepth'],
        'maxCosignatoriesPerAccount': value['maxCosignatoriesPerAccount'],
        'maxCosignedAccountsPerAccount': value['maxCosignedAccountsPerAccount'],
    };
}

