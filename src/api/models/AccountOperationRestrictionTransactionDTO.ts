/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NetworkTypeEnum } from './NetworkTypeEnum';
import {
    NetworkTypeEnumFromJSON,
    NetworkTypeEnumFromJSONTyped,
    NetworkTypeEnumToJSON,
    NetworkTypeEnumToJSONTyped,
} from './NetworkTypeEnum';
import type { TransactionTypeEnum } from './TransactionTypeEnum';
import {
    TransactionTypeEnumFromJSON,
    TransactionTypeEnumFromJSONTyped,
    TransactionTypeEnumToJSON,
    TransactionTypeEnumToJSONTyped,
} from './TransactionTypeEnum';
import type { AccountRestrictionFlagsEnum } from './AccountRestrictionFlagsEnum';
import {
    AccountRestrictionFlagsEnumFromJSON,
    AccountRestrictionFlagsEnumFromJSONTyped,
    AccountRestrictionFlagsEnumToJSON,
    AccountRestrictionFlagsEnumToJSONTyped,
} from './AccountRestrictionFlagsEnum';

/**
 * Transaction to prevent outgoing transactions by transaction type.
 * @export
 * @interface AccountOperationRestrictionTransactionDTO
 */
export interface AccountOperationRestrictionTransactionDTO {
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    size: number;
    /**
     * Entity's signature generated by the signer.
     * @type {string}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    signature: string;
    /**
     * Public key.
     * @type {string}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    signerPublicKey: string;
    /**
     * Entity version.
     * @type {number}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    version: number;
    /**
     * 
     * @type {NetworkTypeEnum}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    network: NetworkTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    type: number;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    maxFee: string;
    /**
     * Duration expressed in number of blocks.
     * @type {string}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    deadline: string;
    /**
     * 
     * @type {AccountRestrictionFlagsEnum}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    restrictionFlags: AccountRestrictionFlagsEnum;
    /**
     * Account restriction additions.
     * @type {Array<TransactionTypeEnum>}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    restrictionAdditions: Array<TransactionTypeEnum>;
    /**
     * Account restriction deletions.
     * @type {Array<TransactionTypeEnum>}
     * @memberof AccountOperationRestrictionTransactionDTO
     */
    restrictionDeletions: Array<TransactionTypeEnum>;
}



/**
 * Check if a given object implements the AccountOperationRestrictionTransactionDTO interface.
 */
export function instanceOfAccountOperationRestrictionTransactionDTO(value: Record<string, any>): value is AccountOperationRestrictionTransactionDTO {
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('signerPublicKey' in value) || value['signerPublicKey'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('maxFee' in value) || value['maxFee'] === undefined) return false;
    if (!('deadline' in value) || value['deadline'] === undefined) return false;
    if (!('restrictionFlags' in value) || value['restrictionFlags'] === undefined) return false;
    if (!('restrictionAdditions' in value) || value['restrictionAdditions'] === undefined) return false;
    if (!('restrictionDeletions' in value) || value['restrictionDeletions'] === undefined) return false;
    return true;
}

export function AccountOperationRestrictionTransactionDTOFromJSON(json: any): AccountOperationRestrictionTransactionDTO {
    return AccountOperationRestrictionTransactionDTOFromJSONTyped(json, false);
}

export function AccountOperationRestrictionTransactionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountOperationRestrictionTransactionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'size': json['size'],
        'signature': json['signature'],
        'signerPublicKey': json['signerPublicKey'],
        'version': json['version'],
        'network': NetworkTypeEnumFromJSON(json['network']),
        'type': json['type'],
        'maxFee': json['maxFee'],
        'deadline': json['deadline'],
        'restrictionFlags': AccountRestrictionFlagsEnumFromJSON(json['restrictionFlags']),
        'restrictionAdditions': ((json['restrictionAdditions'] as Array<any>).map(TransactionTypeEnumFromJSON)),
        'restrictionDeletions': ((json['restrictionDeletions'] as Array<any>).map(TransactionTypeEnumFromJSON)),
    };
}

export function AccountOperationRestrictionTransactionDTOToJSON(json: any): AccountOperationRestrictionTransactionDTO {
    return AccountOperationRestrictionTransactionDTOToJSONTyped(json, false);
}

export function AccountOperationRestrictionTransactionDTOToJSONTyped(value?: AccountOperationRestrictionTransactionDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'size': value['size'],
        'signature': value['signature'],
        'signerPublicKey': value['signerPublicKey'],
        'version': value['version'],
        'network': NetworkTypeEnumToJSON(value['network']),
        'type': value['type'],
        'maxFee': value['maxFee'],
        'deadline': value['deadline'],
        'restrictionFlags': AccountRestrictionFlagsEnumToJSON(value['restrictionFlags']),
        'restrictionAdditions': ((value['restrictionAdditions'] as Array<any>).map(TransactionTypeEnumToJSON)),
        'restrictionDeletions': ((value['restrictionDeletions'] as Array<any>).map(TransactionTypeEnumToJSON)),
    };
}

