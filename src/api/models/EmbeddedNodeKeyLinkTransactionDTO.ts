/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NetworkTypeEnum } from './NetworkTypeEnum';
import {
    NetworkTypeEnumFromJSON,
    NetworkTypeEnumFromJSONTyped,
    NetworkTypeEnumToJSON,
    NetworkTypeEnumToJSONTyped,
} from './NetworkTypeEnum';
import type { LinkActionEnum } from './LinkActionEnum';
import {
    LinkActionEnumFromJSON,
    LinkActionEnumFromJSONTyped,
    LinkActionEnumToJSON,
    LinkActionEnumToJSONTyped,
} from './LinkActionEnum';

/**
 * 
 * @export
 * @interface EmbeddedNodeKeyLinkTransactionDTO
 */
export interface EmbeddedNodeKeyLinkTransactionDTO {
    /**
     * Public key.
     * @type {string}
     * @memberof EmbeddedNodeKeyLinkTransactionDTO
     */
    signerPublicKey: string;
    /**
     * Entity version.
     * @type {number}
     * @memberof EmbeddedNodeKeyLinkTransactionDTO
     */
    version: number;
    /**
     * 
     * @type {NetworkTypeEnum}
     * @memberof EmbeddedNodeKeyLinkTransactionDTO
     */
    network: NetworkTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof EmbeddedNodeKeyLinkTransactionDTO
     */
    type: number;
    /**
     * Public key.
     * @type {string}
     * @memberof EmbeddedNodeKeyLinkTransactionDTO
     */
    linkedPublicKey: string;
    /**
     * 
     * @type {LinkActionEnum}
     * @memberof EmbeddedNodeKeyLinkTransactionDTO
     */
    linkAction: LinkActionEnum;
}



/**
 * Check if a given object implements the EmbeddedNodeKeyLinkTransactionDTO interface.
 */
export function instanceOfEmbeddedNodeKeyLinkTransactionDTO(value: Record<string, any>): value is EmbeddedNodeKeyLinkTransactionDTO {
    if (!('signerPublicKey' in value) || value['signerPublicKey'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('linkedPublicKey' in value) || value['linkedPublicKey'] === undefined) return false;
    if (!('linkAction' in value) || value['linkAction'] === undefined) return false;
    return true;
}

export function EmbeddedNodeKeyLinkTransactionDTOFromJSON(json: any): EmbeddedNodeKeyLinkTransactionDTO {
    return EmbeddedNodeKeyLinkTransactionDTOFromJSONTyped(json, false);
}

export function EmbeddedNodeKeyLinkTransactionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedNodeKeyLinkTransactionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'signerPublicKey': json['signerPublicKey'],
        'version': json['version'],
        'network': NetworkTypeEnumFromJSON(json['network']),
        'type': json['type'],
        'linkedPublicKey': json['linkedPublicKey'],
        'linkAction': LinkActionEnumFromJSON(json['linkAction']),
    };
}

export function EmbeddedNodeKeyLinkTransactionDTOToJSON(json: any): EmbeddedNodeKeyLinkTransactionDTO {
    return EmbeddedNodeKeyLinkTransactionDTOToJSONTyped(json, false);
}

export function EmbeddedNodeKeyLinkTransactionDTOToJSONTyped(value?: EmbeddedNodeKeyLinkTransactionDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'signerPublicKey': value['signerPublicKey'],
        'version': value['version'],
        'network': NetworkTypeEnumToJSON(value['network']),
        'type': value['type'],
        'linkedPublicKey': value['linkedPublicKey'],
        'linkAction': LinkActionEnumToJSON(value['linkAction']),
    };
}

