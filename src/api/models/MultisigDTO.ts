/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MultisigDTO
 */
export interface MultisigDTO {
    /**
     * The version of the state
     * @type {number}
     * @memberof MultisigDTO
     */
    version: number;
    /**
     * Address encoded using a 32-character set.
     * @type {string}
     * @memberof MultisigDTO
     */
    accountAddress: string;
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof MultisigDTO
     */
    minApproval: number;
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof MultisigDTO
     */
    minRemoval: number;
    /**
     * Addresses of the cosignatory accounts.
     * @type {Array<string>}
     * @memberof MultisigDTO
     */
    cosignatoryAddresses: Array<string>;
    /**
     * Multisig accounts where the account is cosignatory.
     * @type {Array<string>}
     * @memberof MultisigDTO
     */
    multisigAddresses: Array<string>;
}

/**
 * Check if a given object implements the MultisigDTO interface.
 */
export function instanceOfMultisigDTO(value: Record<string, any>): value is MultisigDTO {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('accountAddress' in value) || value['accountAddress'] === undefined) return false;
    if (!('minApproval' in value) || value['minApproval'] === undefined) return false;
    if (!('minRemoval' in value) || value['minRemoval'] === undefined) return false;
    if (!('cosignatoryAddresses' in value) || value['cosignatoryAddresses'] === undefined) return false;
    if (!('multisigAddresses' in value) || value['multisigAddresses'] === undefined) return false;
    return true;
}

export function MultisigDTOFromJSON(json: any): MultisigDTO {
    return MultisigDTOFromJSONTyped(json, false);
}

export function MultisigDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultisigDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'accountAddress': json['accountAddress'],
        'minApproval': json['minApproval'],
        'minRemoval': json['minRemoval'],
        'cosignatoryAddresses': json['cosignatoryAddresses'],
        'multisigAddresses': json['multisigAddresses'],
    };
}

export function MultisigDTOToJSON(json: any): MultisigDTO {
    return MultisigDTOToJSONTyped(json, false);
}

export function MultisigDTOToJSONTyped(value?: MultisigDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'accountAddress': value['accountAddress'],
        'minApproval': value['minApproval'],
        'minRemoval': value['minRemoval'],
        'cosignatoryAddresses': value['cosignatoryAddresses'],
        'multisigAddresses': value['multisigAddresses'],
    };
}

