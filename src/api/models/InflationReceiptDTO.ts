/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReceiptTypeEnum } from './ReceiptTypeEnum';
import {
    ReceiptTypeEnumFromJSON,
    ReceiptTypeEnumFromJSONTyped,
    ReceiptTypeEnumToJSON,
    ReceiptTypeEnumToJSONTyped,
} from './ReceiptTypeEnum';

/**
 * Receipt stored when network currency mosaics were created due to inflation.
 * @export
 * @interface InflationReceiptDTO
 */
export interface InflationReceiptDTO {
    /**
     * Version of the receipt.
     * @type {number}
     * @memberof InflationReceiptDTO
     */
    version: number;
    /**
     * 
     * @type {ReceiptTypeEnum}
     * @memberof InflationReceiptDTO
     */
    type: ReceiptTypeEnum;
    /**
     * Mosaic identifier.
     * @type {string}
     * @memberof InflationReceiptDTO
     */
    mosaicId: string;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof InflationReceiptDTO
     */
    amount: string;
}



/**
 * Check if a given object implements the InflationReceiptDTO interface.
 */
export function instanceOfInflationReceiptDTO(value: Record<string, any>): value is InflationReceiptDTO {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('mosaicId' in value) || value['mosaicId'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function InflationReceiptDTOFromJSON(json: any): InflationReceiptDTO {
    return InflationReceiptDTOFromJSONTyped(json, false);
}

export function InflationReceiptDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): InflationReceiptDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'type': ReceiptTypeEnumFromJSON(json['type']),
        'mosaicId': json['mosaicId'],
        'amount': json['amount'],
    };
}

export function InflationReceiptDTOToJSON(json: any): InflationReceiptDTO {
    return InflationReceiptDTOToJSONTyped(json, false);
}

export function InflationReceiptDTOToJSONTyped(value?: InflationReceiptDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'type': ReceiptTypeEnumToJSON(value['type']),
        'mosaicId': value['mosaicId'],
        'amount': value['amount'],
    };
}

