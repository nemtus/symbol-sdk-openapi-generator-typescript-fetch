/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AliasTypeEnum } from './AliasTypeEnum';
import {
    AliasTypeEnumFromJSON,
    AliasTypeEnumFromJSONTyped,
    AliasTypeEnumToJSON,
    AliasTypeEnumToJSONTyped,
} from './AliasTypeEnum';

/**
 * 
 * @export
 * @interface AliasDTO
 */
export interface AliasDTO {
    /**
     * 
     * @type {AliasTypeEnum}
     * @memberof AliasDTO
     */
    type: AliasTypeEnum;
    /**
     * Mosaic identifier.
     * @type {string}
     * @memberof AliasDTO
     */
    mosaicId?: string;
    /**
     * Address encoded using a 32-character set.
     * @type {string}
     * @memberof AliasDTO
     */
    address?: string;
}



/**
 * Check if a given object implements the AliasDTO interface.
 */
export function instanceOfAliasDTO(value: Record<string, any>): value is AliasDTO {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function AliasDTOFromJSON(json: any): AliasDTO {
    return AliasDTOFromJSONTyped(json, false);
}

export function AliasDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AliasDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'type': AliasTypeEnumFromJSON(json['type']),
        'mosaicId': json['mosaicId'] == null ? undefined : json['mosaicId'],
        'address': json['address'] == null ? undefined : json['address'],
    };
}

export function AliasDTOToJSON(json: any): AliasDTO {
    return AliasDTOToJSONTyped(json, false);
}

export function AliasDTOToJSONTyped(value?: AliasDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': AliasTypeEnumToJSON(value['type']),
        'mosaicId': value['mosaicId'],
        'address': value['address'],
    };
}

