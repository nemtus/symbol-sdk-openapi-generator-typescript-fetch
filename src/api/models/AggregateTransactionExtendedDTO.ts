/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NetworkTypeEnum } from './NetworkTypeEnum';
import {
    NetworkTypeEnumFromJSON,
    NetworkTypeEnumFromJSONTyped,
    NetworkTypeEnumToJSON,
    NetworkTypeEnumToJSONTyped,
} from './NetworkTypeEnum';
import type { CosignatureDTO } from './CosignatureDTO';
import {
    CosignatureDTOFromJSON,
    CosignatureDTOFromJSONTyped,
    CosignatureDTOToJSON,
    CosignatureDTOToJSONTyped,
} from './CosignatureDTO';
import type { EmbeddedTransactionInfoDTO } from './EmbeddedTransactionInfoDTO';
import {
    EmbeddedTransactionInfoDTOFromJSON,
    EmbeddedTransactionInfoDTOFromJSONTyped,
    EmbeddedTransactionInfoDTOToJSON,
    EmbeddedTransactionInfoDTOToJSONTyped,
} from './EmbeddedTransactionInfoDTO';

/**
 * Transaction to combine multiple transactions together.
 * @export
 * @interface AggregateTransactionExtendedDTO
 */
export interface AggregateTransactionExtendedDTO {
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof AggregateTransactionExtendedDTO
     */
    size: number;
    /**
     * Entity's signature generated by the signer.
     * @type {string}
     * @memberof AggregateTransactionExtendedDTO
     */
    signature: string;
    /**
     * Public key.
     * @type {string}
     * @memberof AggregateTransactionExtendedDTO
     */
    signerPublicKey: string;
    /**
     * Entity version.
     * @type {number}
     * @memberof AggregateTransactionExtendedDTO
     */
    version: number;
    /**
     * 
     * @type {NetworkTypeEnum}
     * @memberof AggregateTransactionExtendedDTO
     */
    network: NetworkTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof AggregateTransactionExtendedDTO
     */
    type: number;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof AggregateTransactionExtendedDTO
     */
    maxFee: string;
    /**
     * Duration expressed in number of blocks.
     * @type {string}
     * @memberof AggregateTransactionExtendedDTO
     */
    deadline: string;
    /**
     * 
     * @type {string}
     * @memberof AggregateTransactionExtendedDTO
     */
    transactionsHash: string;
    /**
     * Array of transaction cosignatures.
     * @type {Array<CosignatureDTO>}
     * @memberof AggregateTransactionExtendedDTO
     */
    cosignatures: Array<CosignatureDTO>;
    /**
     * Array of transactions initiated by different accounts.
     * @type {Array<EmbeddedTransactionInfoDTO>}
     * @memberof AggregateTransactionExtendedDTO
     */
    transactions: Array<EmbeddedTransactionInfoDTO>;
}



/**
 * Check if a given object implements the AggregateTransactionExtendedDTO interface.
 */
export function instanceOfAggregateTransactionExtendedDTO(value: Record<string, any>): value is AggregateTransactionExtendedDTO {
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('signerPublicKey' in value) || value['signerPublicKey'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('maxFee' in value) || value['maxFee'] === undefined) return false;
    if (!('deadline' in value) || value['deadline'] === undefined) return false;
    if (!('transactionsHash' in value) || value['transactionsHash'] === undefined) return false;
    if (!('cosignatures' in value) || value['cosignatures'] === undefined) return false;
    if (!('transactions' in value) || value['transactions'] === undefined) return false;
    return true;
}

export function AggregateTransactionExtendedDTOFromJSON(json: any): AggregateTransactionExtendedDTO {
    return AggregateTransactionExtendedDTOFromJSONTyped(json, false);
}

export function AggregateTransactionExtendedDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregateTransactionExtendedDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'size': json['size'],
        'signature': json['signature'],
        'signerPublicKey': json['signerPublicKey'],
        'version': json['version'],
        'network': NetworkTypeEnumFromJSON(json['network']),
        'type': json['type'],
        'maxFee': json['maxFee'],
        'deadline': json['deadline'],
        'transactionsHash': json['transactionsHash'],
        'cosignatures': ((json['cosignatures'] as Array<any>).map(CosignatureDTOFromJSON)),
        'transactions': ((json['transactions'] as Array<any>).map(EmbeddedTransactionInfoDTOFromJSON)),
    };
}

export function AggregateTransactionExtendedDTOToJSON(json: any): AggregateTransactionExtendedDTO {
    return AggregateTransactionExtendedDTOToJSONTyped(json, false);
}

export function AggregateTransactionExtendedDTOToJSONTyped(value?: AggregateTransactionExtendedDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'size': value['size'],
        'signature': value['signature'],
        'signerPublicKey': value['signerPublicKey'],
        'version': value['version'],
        'network': NetworkTypeEnumToJSON(value['network']),
        'type': value['type'],
        'maxFee': value['maxFee'],
        'deadline': value['deadline'],
        'transactionsHash': value['transactionsHash'],
        'cosignatures': ((value['cosignatures'] as Array<any>).map(CosignatureDTOToJSON)),
        'transactions': ((value['transactions'] as Array<any>).map(EmbeddedTransactionInfoDTOToJSON)),
    };
}

