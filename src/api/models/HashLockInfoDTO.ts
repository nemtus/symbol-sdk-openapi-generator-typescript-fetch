/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HashLockEntryDTO } from './HashLockEntryDTO';
import {
    HashLockEntryDTOFromJSON,
    HashLockEntryDTOFromJSONTyped,
    HashLockEntryDTOToJSON,
    HashLockEntryDTOToJSONTyped,
} from './HashLockEntryDTO';

/**
 * 
 * @export
 * @interface HashLockInfoDTO
 */
export interface HashLockInfoDTO {
    /**
     * 
     * @type {string}
     * @memberof HashLockInfoDTO
     */
    id: string;
    /**
     * 
     * @type {HashLockEntryDTO}
     * @memberof HashLockInfoDTO
     */
    lock: HashLockEntryDTO;
}

/**
 * Check if a given object implements the HashLockInfoDTO interface.
 */
export function instanceOfHashLockInfoDTO(value: Record<string, any>): value is HashLockInfoDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lock' in value) || value['lock'] === undefined) return false;
    return true;
}

export function HashLockInfoDTOFromJSON(json: any): HashLockInfoDTO {
    return HashLockInfoDTOFromJSONTyped(json, false);
}

export function HashLockInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): HashLockInfoDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'lock': HashLockEntryDTOFromJSON(json['lock']),
    };
}

export function HashLockInfoDTOToJSON(json: any): HashLockInfoDTO {
    return HashLockInfoDTOToJSONTyped(json, false);
}

export function HashLockInfoDTOToJSONTyped(value?: HashLockInfoDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lock': HashLockEntryDTOToJSON(value['lock']),
    };
}

