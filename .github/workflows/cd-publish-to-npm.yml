name: CD Publish to npm

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: ${{ matrix.java-version }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - run: git submodule update --init --recursive --remote
      - uses: actions/cache@v4
        id: cache-symbol-openapi
        with:
          path: ./symbol-openapi/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-symbol-openapi-${{ hashFiles('symbol-openapi/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-symbol-openapi-
      - run: npm install
        working-directory: ./symbol-openapi
      - run: npm run build
        working-directory: ./symbol-openapi
      - run: java -version
      - run: npm install @openapitools/openapi-generator-cli -g
      - run: openapi-generator-cli version
      - uses: actions/cache@v4
        id: cache-root
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-root-
      - run: npm install
      - run: npm run openapi:set:version
      - run: npm run openapi:generate
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.java-version }}-${{ matrix.node-version }}
          path: dist/
          retention-days: 1

  test-unit:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.java-version }}-${{ matrix.node-version }}
          path: dist/
      - uses: actions/cache@v4
        id: cache-root-test
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-root-
      - run: npm install
      - run: npm run test

  test-nodejs-javascript:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.java-version }}-${{ matrix.node-version }}
          path: dist/
      - uses: actions/cache@v4
        id: cache-nodejs-javascript
        with:
          path: ./tests/nodejs-javascript/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-nodejs-javascript-${{ hashFiles('tests/nodejs-javascript/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-nodejs-javascript-
      - run: npm install
        working-directory: ./tests/nodejs-javascript
      - run: npm test
        working-directory: ./tests/nodejs-javascript

  test-nodejs-typescript:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.java-version }}-${{ matrix.node-version }}
          path: dist/
      - uses: actions/cache@v4
        id: cache-nodejs-typescript
        with:
          path: ./tests/nodejs-typescript/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-nodejs-typescript-${{ hashFiles('tests/nodejs-typescript/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-nodejs-typescript-
      - run: npm install
        working-directory: ./tests/nodejs-typescript
      - run: npm test
        working-directory: ./tests/nodejs-typescript

  test-browser-cdn:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.49.1-noble
      options: --user 1001

    strategy:
      matrix:
        java-version: [21]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.java-version }}-${{ matrix.node-version }}
          path: dist/
      - uses: actions/cache@v4
        id: cache-browser-cdn
        with:
          path: ./tests/browser-cdn/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-browser-cdn-${{ hashFiles('tests/browser-cdn/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-browser-cdn-
      - run: npm install
        working-directory: ./tests/browser-cdn
      - run: npm run test
        working-directory: ./tests/browser-cdn

  publish:
    needs: [test-unit, test-nodejs-javascript, test-nodejs-typescript, test-browser-cdn]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.java-version }}-${{ matrix.node-version }}
          path: dist/
      - uses: actions/cache@v4
        id: cache-root-publish
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-root-
      - run: npm install
      - run: npm publish --access=public
        working-directory: ./dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
